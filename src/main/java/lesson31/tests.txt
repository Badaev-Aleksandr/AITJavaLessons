
1- Модульное тестирование (Unit testing) тесты, проверяющие каждый модуль системы по отдельности

2- Системные тесты (system testing) тест высокого уровня для тестирования системы или ее большой части в целом

3- Регрессионные тесты (regressions tests) тесты на проверку работоспособности после новой функции или исправления бага

4- Функциональное тестирование (functional testing) проверка на соответствие установленным требованиям в документации,
юзер сторях

5- Тестирование производительности (performance testing) тестирование для отработки скорости работы системы или
 ее определенной части под определенной нагрузкой

6- Нагрузочное тестирование (load testing) тестирование для обработки скорости и устойчивости системы при стандартный и
 пиковых нагрузках при которой приложение еще способно работать корректно

7- Стресс-тестирование (stress testing) проверка работоспособности приложения при максимально возможных нагрузках, но
за короткое время

8- Тестирование безопасности (security testing) тесты для проверки безопасности приложения от хакеров,
вирусов, несанкционированного доступа с ресурсами...

9- Тестирование локализации (localization testing) тестирование локализации приложения

10- Юзабилити тестирование (usability testing) тестирование на проверку удобства использования, привлекательности приложения
 и доступности функций приложения

         UI
      Integration
     Unit Unit Unit

 Покрытие кода code coverage 70-80%

 TDD Test driven development test-->development

 Test Case тестовый сценарий

 Junit


 FIRST
 F --> fast тест должен выполняться быстро
 I --> independent тест должен быть и выполняться независимо от других тестов
 R --> repeatable тест должен выдавать одинаковый результат при многократном повторении
 S --> selfvalidating самоуправление тест должен четко указывать на результаты выполнения, пройден или нет
 T --> timely своевременность тест пишется непосредственно
 до или сразу после написания метода, который будет тестирован

assertEquals(expected, actual) проверка, что 2 значения равны
 assertNotEquals(expected, actual) проверка, что 2 значения не равны
 assertTrue(condition) условие истинно
 assertFalse(condition) условие ложное
 assertNull(condition) объект равен null
 assertNotNull(condition) объект не равен null
 assertThrows(extended, actual) проверка на выбрасываемое исключение в коде

 @ParameterizedTest обозначение параметризованного теста
 @ValueSource фиксированные наборы значений
 @EnumSource предаем значения enum
 @MethodSource передаем значения из статических методов
 @CsvSource передаем значения из строк csv
 @ArgumentSource передаем значение из пользовательского источника аргументов
